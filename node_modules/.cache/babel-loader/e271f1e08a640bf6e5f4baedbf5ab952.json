{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Boukhousse\\\\cs415r_f21_groupproject-angry-nerds\\\\Frontend\\\\src\\\\components\\\\SignIn\\\\index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { Container, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, FormButton, Text } from './SigninElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      redirect: null,\n      email: \"\",\n      password: \"\",\n      hits: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    console.log(e);\n    e.preventDefault();\n    this.callAPI();\n  }\n\n  formValidation() {\n    return this.state.password.length > 0 && this.state.email.length > 0;\n  }\n\n  callAPI() {\n    let API = \"https://localhost:44347/api/\";\n    let query = \"getToken\";\n    console.log(\"Starting fetch\");\n    fetch(API + query, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      })\n    }).then(response => {\n      if (response.ok) {\n        window.localStorage.setItem(\"user\", JSON.stringify(response.json()));\n        this.setState({\n          redirect: \"/\"\n        });\n      } else {\n        alert(\"Hello\");\n      }\n    }); //.then(json => console.log(json))\n    // .then(json => );\n    // console.log(this.state.hits);\n  }\n\n  getTransaction() {\n    let API = \"https://localhost:44347/api/\";\n    let query = \"getTransaction\";\n    fetch(API + query, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + JSON.parse(window.localStorage.getItem(\"user\"))[\"token\"]\n      },\n      body: JSON.stringify({\n        \"TransactionID\": 1\n      })\n    }).then(response => response.json()).then(json => console.log(json));\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(FormWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            to: \"/\",\n            children: \"Main Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleSubmit(e),\n              children: [/*#__PURE__*/_jsxDEV(FormH1, {\n                children: \"Sign in to your account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange,\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange,\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n                type: \"submit\",\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                onClick: this.getTransaction,\n                children: \"Forgot password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n/*\r\nstart a function to handle login\r\n\r\n\r\nhandleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: ''\r\n        }\r\n      }); \r\n      // login successful\r\n    }\r\n  };\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormWrap>\r\n          <Icon to='/'>Main Page</Icon>\r\n          <FormContent>\r\n            <Form action='#'>\r\n              <FormH1>Sign in to your account</FormH1>\r\n              <FormLabel htmlFor='email'>Email</FormLabel>\r\n              <FormInput name=\"email\" type='email' placeholder=\"Enter Email\" required />\r\n              <FormLabel htmlFor='password'>Password</FormLabel>\r\n              <FormInput name=\"password\" type='password' placeholder=\"Enter Password\" required />\r\n              <FormButton type='submit'>Continue</FormButton>\r\n              <Text>Forgot password</Text>\r\n            </Form>\r\n          </FormContent>\r\n        </FormWrap>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n*/\n\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Ahmed Boukhousse/cs415r_f21_groupproject-angry-nerds/Frontend/src/components/SignIn/index.js"],"names":["React","Redirect","Container","FormWrap","Icon","FormContent","Form","FormH1","FormLabel","FormInput","FormButton","Text","SignIn","Component","constructor","props","handleChange","event","setState","target","name","value","state","redirect","email","password","hits","bind","handleSubmit","e","console","log","preventDefault","callAPI","formValidation","length","API","query","fetch","method","mode","headers","body","JSON","stringify","then","response","ok","window","localStorage","setItem","json","alert","getTransaction","parse","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,SARF,EASEC,UATF,EAUEC,IAVF,QAWO,kBAXP;;;;AAaA,MAAMC,MAAN,SAAqBZ,KAAK,CAACa,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAclBC,YAdkB,GAcHC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,OAAd;AAGD,KAlBiB;;AAGhB,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAOA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAQDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAA,IAAAA,CAAC,CAACG,cAAF;AACA,SAAKC,OAAL;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKZ,KAAL,CAAWG,QAAX,CAAoBU,MAApB,GAA6B,CAA7B,IAAkC,KAAKb,KAAL,CAAWE,KAAX,CAAiBW,MAAjB,GAA0B,CAAnE;AACD;;AAEDF,EAAAA,OAAO,GAAE;AACP,QAAIG,GAAG,GAAG,8BAAV;AACA,QAAIC,KAAK,GAAG,UAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAO,IAAAA,KAAK,CAACF,GAAG,GAAGC,KAAP,EAAc;AACfE,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,IAAI,EAAE,MAFS;AAGfC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAAS,KAAKtB,KAAL,CAAWE,KAArB;AAA4B,oBAAY,KAAKF,KAAL,CAAWG;AAAnD,OAAf;AANS,KAAd,CAAL,CAQCoB,IARD,CAQMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCP,IAAI,CAACC,SAAL,CAAeE,QAAQ,CAACK,IAAT,EAAf,CAApC;AACA,aAAKjC,QAAL,CAAc;AAACK,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD,OAHD,MAIK;AACH6B,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AAAC,KAfJ,EAJO,CAoBP;AACA;AACA;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,QAAIjB,GAAG,GAAG,8BAAV;AACA,QAAIC,KAAK,GAAG,gBAAZ;AACAC,IAAAA,KAAK,CAACF,GAAG,GAAGC,KAAP,EAAc;AACfE,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,IAAI,EAAE,MAFS;AAGfC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYE,IAAI,CAACW,KAAL,CAAWN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,MAA5B,CAAX,EAAgD,OAAhD;AAFxB,OAHM;AAOfb,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAiB;AAAlB,OAAf;AAPS,KAAd,CAAL,CASCC,IATD,CASMC,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EATlB,EAUCN,IAVD,CAUMM,IAAI,IAAIrB,OAAO,CAACC,GAAR,CAAYoB,IAAZ,CAVd;AAWD;;AAEPK,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKlC,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACI;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAKM,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAzB;AAAA,sCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,OAAhB;AAAwB,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,KAA1C;AAAiD,gBAAA,QAAQ,EAAI,KAAKR,YAAlE;AAAgF,gBAAA,IAAI,EAAC,OAArF;AAA6F,gBAAA,WAAW,EAAC,aAAzG;AAAuH,gBAAA,QAAQ;AAA/H;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,UAAhB;AAA2B,gBAAA,KAAK,EAAE,KAAKM,KAAL,CAAWG,QAA7C;AAAuD,gBAAA,QAAQ,EAAG,KAAKT,YAAvE;AAAqF,gBAAA,IAAI,EAAC,UAA1F;AAAqG,gBAAA,WAAW,EAAC,gBAAjH;AAAkI,gBAAA,QAAQ;AAA1I;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,IAAD;AAAM,gBAAA,OAAO,EAAE,KAAKqC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADJ;AAoBC;;AAjGgC;AAmGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAezC,MAAf","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {\r\n  Container,\r\n  FormWrap,\r\n  Icon,\r\n  FormContent,\r\n  Form,\r\n  FormH1,\r\n  FormLabel,\r\n  FormInput,\r\n  FormButton,\r\n  Text\r\n} from './SigninElements';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor (props) { \r\n        super(props);\r\n    \r\n        this.state = {\r\n            redirect: null,\r\n            email: \"\",\r\n            password: \"\",\r\n            hits: [],\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(e) {\r\n        console.log(e);\r\n        e.preventDefault();\r\n        this.callAPI();\r\n      }\r\n    \r\n      formValidation() {\r\n        return this.state.password.length > 0 && this.state.email.length > 0;\r\n      }\r\n\r\n      callAPI(){\r\n        let API = \"https://localhost:44347/api/\";\r\n        let query = \"getToken\";\r\n        console.log(\"Starting fetch\");\r\n        fetch(API + query, {\r\n            method: 'POST',\r\n            mode: 'cors', \r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\"email\": this.state.email, \"password\": this.state.password})\r\n        })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            window.localStorage.setItem(\"user\", JSON.stringify(response.json()));\r\n            this.setState({redirect: \"/\"});\r\n          }\r\n          else {\r\n            alert(\"Hello\");\r\n          }})\r\n        //.then(json => console.log(json))\r\n        // .then(json => );\r\n        // console.log(this.state.hits);\r\n      }\r\n\r\n      getTransaction() {\r\n        let API = \"https://localhost:44347/api/\";\r\n        let query = \"getTransaction\";\r\n        fetch(API + query, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + JSON.parse(window.localStorage.getItem(\"user\"))[\"token\"]\r\n            },\r\n            body: JSON.stringify({\"TransactionID\": 1})\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => console.log(json));\r\n      };\r\n\r\nrender() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n    return (\r\n        <>\r\n          <Container>\r\n            <FormWrap>\r\n              <Icon to='/'>Main Page</Icon>\r\n              <FormContent>\r\n                <Form onSubmit = {(e) => this.handleSubmit(e)}>\r\n                  <FormH1>Sign in to your account</FormH1>\r\n                  <FormLabel htmlFor='email'>Email</FormLabel>\r\n                  <FormInput name=\"email\" value={this.state.email} onChange = {this.handleChange} type='email' placeholder=\"Enter Email\" required />\r\n                  <FormLabel htmlFor='password'>Password</FormLabel>\r\n                  <FormInput name=\"password\" value={this.state.password} onChange= {this.handleChange} type='password' placeholder=\"Enter Password\" required />\r\n                  <FormButton type='submit'>Continue</FormButton>\r\n                  <Text onClick={this.getTransaction}>Forgot password</Text>\r\n                </Form>\r\n              </FormContent>\r\n            </FormWrap>\r\n          </Container>\r\n        </>\r\n      );\r\n    }\r\n}\r\n/*\r\nstart a function to handle login\r\n\r\n\r\nhandleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: ''\r\n        }\r\n      }); \r\n      // login successful\r\n    }\r\n  };\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormWrap>\r\n          <Icon to='/'>Main Page</Icon>\r\n          <FormContent>\r\n            <Form action='#'>\r\n              <FormH1>Sign in to your account</FormH1>\r\n              <FormLabel htmlFor='email'>Email</FormLabel>\r\n              <FormInput name=\"email\" type='email' placeholder=\"Enter Email\" required />\r\n              <FormLabel htmlFor='password'>Password</FormLabel>\r\n              <FormInput name=\"password\" type='password' placeholder=\"Enter Password\" required />\r\n              <FormButton type='submit'>Continue</FormButton>\r\n              <Text>Forgot password</Text>\r\n            </Form>\r\n          </FormContent>\r\n        </FormWrap>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n*/\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}