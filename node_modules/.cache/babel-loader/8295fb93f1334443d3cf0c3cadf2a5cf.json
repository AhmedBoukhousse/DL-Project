{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Boukhousse\\\\Desktop\\\\Web Development\\\\online-bank\\\\src\\\\components\\\\SignIn\\\\index.js\";\nimport React from 'react';\nimport { Container, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, FormButton, Text } from './SigninElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hits: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    console.log(e);\n    e.preventDefault();\n    this.updateFromDB();\n  }\n\n  formValidation() {\n    return this.state.password.length > 0 && this.state.email.length > 0;\n  }\n\n  updateFromDB() {\n    let API = \"api/\";\n    let query = \"getTransactionHistory\";\n    fetch(API + query, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"ID\": \"211111110\",\n        \"pageSize\": 5,\n        \"pageNumber\": 0\n      })\n    }).then(response => response.json()).then(data => this.setState({\n      hits: data.hits\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(FormWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            to: \"/\",\n            children: \"Main Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleSubmit(e),\n              children: [/*#__PURE__*/_jsxDEV(FormH1, {\n                children: \"Sign in to your account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange,\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange,\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n                type: \"submit\",\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: \"Forgot password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\n/*\r\nstart a function to handle login\r\n\r\n\r\nhandleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: ''\r\n        }\r\n      }); \r\n      // login successful\r\n    }\r\n  };\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormWrap>\r\n          <Icon to='/'>Main Page</Icon>\r\n          <FormContent>\r\n            <Form action='#'>\r\n              <FormH1>Sign in to your account</FormH1>\r\n              <FormLabel htmlFor='email'>Email</FormLabel>\r\n              <FormInput name=\"email\" type='email' placeholder=\"Enter Email\" required />\r\n              <FormLabel htmlFor='password'>Password</FormLabel>\r\n              <FormInput name=\"password\" type='password' placeholder=\"Enter Password\" required />\r\n              <FormButton type='submit'>Continue</FormButton>\r\n              <Text>Forgot password</Text>\r\n            </Form>\r\n          </FormContent>\r\n        </FormWrap>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n*/\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Ahmed Boukhousse/Desktop/Web Development/online-bank/src/components/SignIn/index.js"],"names":["React","Container","FormWrap","Icon","FormContent","Form","FormH1","FormLabel","FormInput","FormButton","Text","SignIn","Component","constructor","props","handleChange","event","setState","target","name","value","state","email","password","hits","bind","handleSubmit","e","console","log","preventDefault","updateFromDB","formValidation","length","API","query","fetch","method","mode","headers","body","JSON","stringify","then","response","json","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  FormWrap,\r\n  Icon,\r\n  FormContent,\r\n  Form,\r\n  FormH1,\r\n  FormLabel,\r\n  FormInput,\r\n  FormButton,\r\n  Text\r\n} from './SigninElements';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            hits: [],\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(e) {\r\n        console.log(e);\r\n        e.preventDefault();\r\n        this.updateFromDB();\r\n      }\r\n    \r\n      formValidation() {\r\n        return this.state.password.length > 0 && this.state.email.length > 0;\r\n      }\r\n\r\n\r\n      updateFromDB(){\r\n        let API = \"api/\";\r\n        let query = \"getTransactionHistory\";\r\n        fetch(API + query, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\"ID\": \"211111110\", \"pageSize\": 5, \"pageNumber\": 0})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ hits: data.hits }));\r\n      }\r\n\r\nrender() {\r\n    \r\n    return (\r\n        <>\r\n          <Container>\r\n            <FormWrap>\r\n              <Icon to='/'>Main Page</Icon>\r\n              <FormContent>\r\n                <Form onSubmit = {(e) => this.handleSubmit(e)}>\r\n                  <FormH1>Sign in to your account</FormH1>\r\n                  <FormLabel htmlFor='email'>Email</FormLabel>\r\n                  <FormInput name=\"email\" value={this.state.email} onChange = {this.handleChange} type='email' placeholder=\"Enter Email\" required />\r\n                  <FormLabel htmlFor='password'>Password</FormLabel>\r\n                  <FormInput name=\"password\" value={this.state.password} onChange= {this.handleChange} type='password' placeholder=\"Enter Password\" required />\r\n                  <FormButton type='submit'>Continue</FormButton>\r\n                  <Text>Forgot password</Text>\r\n                </Form>\r\n              </FormContent>\r\n            </FormWrap>\r\n          </Container>\r\n        </>\r\n      );\r\n    }\r\n};\r\n/*\r\nstart a function to handle login\r\n\r\n\r\nhandleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: ''\r\n        }\r\n      }); \r\n      // login successful\r\n    }\r\n  };\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormWrap>\r\n          <Icon to='/'>Main Page</Icon>\r\n          <FormContent>\r\n            <Form action='#'>\r\n              <FormH1>Sign in to your account</FormH1>\r\n              <FormLabel htmlFor='email'>Email</FormLabel>\r\n              <FormInput name=\"email\" type='email' placeholder=\"Enter Email\" required />\r\n              <FormLabel htmlFor='password'>Password</FormLabel>\r\n              <FormInput name=\"password\" type='password' placeholder=\"Enter Password\" required />\r\n              <FormButton type='submit'>Continue</FormButton>\r\n              <Text>Forgot password</Text>\r\n            </Form>\r\n          </FormContent>\r\n        </FormWrap>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n*/\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}